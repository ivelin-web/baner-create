{"version":3,"sources":["pages/login/Login.js"],"names":["Login","useState","email","setEmail","password","setPassword","error","setError","useContext","AuthContext","isFetching","dispatch","className","style","height","transform","onSubmit","e","preventDefault","LoginStart","userCredentials","AuthService","login","then","loginRes","getAuthUser","userRes","LoginSuccess","data","catch","err","LoginFailed","console","log","response","message","Group","controlId","Control","onChange","target","value","type","placeholder","variant","disabled","width","size","animation","role"],"mappings":"gPAOe,SAASA,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,EAAiCC,qBAAWC,KAApCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAoCpB,OACI,yBAASC,UAAU,oBAAoBC,MAAO,CAAEC,OAAQ,wBAAxD,SACI,eAAC,IAAD,CAAWF,UAAU,0EAA0EC,MAAO,CAAEE,UAAW,yBAAnH,UACI,oBAAIH,UAAU,gCAAd,mBACA,eAAC,IAAD,CAAMI,SA9BG,SAACC,GAClBA,EAAEC,iBAEFP,EAASQ,eAET,IAAMC,EAAkB,CAAElB,QAAOE,YAGjCiB,IAAYC,MAAMF,GACbG,MAAK,SAACC,GACHH,IAAYI,cACPF,MAAK,SAACG,GACHf,EAASgB,YAAaD,EAAQE,UAEjCC,OAAM,SAACC,GACJnB,EAASoB,eACTC,QAAQC,IAAIH,SAGvBD,OAAM,SAACC,GACJnB,EAASoB,eACT1B,EAAY,IACZE,EAASuB,EAAII,SAASN,KAAKO,aAQ3B,UACI,cAAC,IAAKC,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,iBAAvC,SACI,cAAC,IAAKC,QAAN,CAAcC,SAxCR,SAACtB,GACvBd,EAASc,EAAEuB,OAAOC,QAuCyCA,MAAOvC,EAAOwC,KAAK,QAAQC,YAAY,YAGtF,cAAC,IAAKP,MAAN,CAAYxB,UAAU,OAAOyB,UAAU,oBAAvC,SACI,cAAC,IAAKC,QAAN,CAAcC,SAxCL,SAACtB,GAC1BZ,EAAYY,EAAEuB,OAAOC,QAuCyCA,MAAOrC,EAAUsC,KAAK,WAAWC,YAAY,eAG9FrC,GAAS,cAAC,IAAD,CAAOsC,QAAQ,SAAf,SAAyBtC,IAEnC,cAAC,IAAD,CAAQuC,SAAUnC,EAAYE,UAAU,aAAa8B,KAAK,SAAS7B,MAAO,CAAEiC,MAAO,QAAnF,SACKpC,EACG,cAAC,IAAD,CAASqC,KAAK,KAAKC,UAAU,SAASC,KAAK,SAA3C,SACI,sBAAMrC,UAAU,kBAAhB,0BAGJ","file":"static/js/8.0f0db7cd.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Alert, Button, Container, Form, Spinner } from \"react-bootstrap\";\r\n\r\nimport AuthService from \"../../services/AuthService\";\r\nimport { AuthContext } from \"../../context/auth/AuthContext\";\r\nimport { LoginFailed, LoginStart, LoginSuccess } from \"../../context/auth/AuthActions\";\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const { isFetching, dispatch } = useContext(AuthContext);\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(LoginStart());\r\n\r\n        const userCredentials = { email, password };\r\n\r\n        // Login, then get logged user and dispatch to reducer\r\n        AuthService.login(userCredentials)\r\n            .then((loginRes) => {\r\n                AuthService.getAuthUser()\r\n                    .then((userRes) => {\r\n                        dispatch(LoginSuccess(userRes.data));\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch(LoginFailed());\r\n                        console.log(err);\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                dispatch(LoginFailed());\r\n                setPassword(\"\");\r\n                setError(err.response.data.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"position-relative\" style={{ height: \"calc(100vh - 61.6px)\" }}>\r\n            <Container className=\"col-8 col-md-6 col-lg-4 shadow-lg p-4 position-absolute start-50 top-50\" style={{ transform: \"translate(-50%, -50%)\" }}>\r\n                <h3 className=\"text-center text-primary mb-4\">Login</h3>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-4\" controlId=\"formBasicEmail\">\r\n                        <Form.Control onChange={handleEmailChange} value={email} type=\"email\" placeholder=\"Email\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-4\" controlId=\"formBasicPassword\">\r\n                        <Form.Control onChange={handlePasswordChange} value={password} type=\"password\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                    <Button disabled={isFetching} className=\"bg-primary\" type=\"submit\" style={{ width: \"80px\" }}>\r\n                        {isFetching ? (\r\n                            <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </Spinner>\r\n                        ) : (\r\n                            \"Login\"\r\n                        )}\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n"],"sourceRoot":""}