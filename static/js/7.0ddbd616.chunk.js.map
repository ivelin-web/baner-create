{"version":3,"sources":["services/BanerService.js","pages/create-baner/CreateBaner.js"],"names":["BanerService","get","a","axios","res","add","data","post","edit","id","put","remove","delete","CreateBaner","useState","text","setText","selectedFile","setSelectedFile","isSubmited","setIsSubmited","errors","setErrors","isLoading","setIsLoading","fileRef","useRef","history","useHistory","className","onSubmit","e","preventDefault","FormData","append","then","push","toast","success","catch","err","response","Group","controlId","Control","isValid","isInvalid","onChange","target","value","type","placeholder","Feedback","message","image","current","files","ref","src","URL","createObjectURL","alt","style","objectFit","width","disabled","size","animation","role"],"mappings":"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","file":"static/js/7.0ddbd616.chunk.js","sourcesContent":["import axios from \"../axios\";\r\n\r\nexport default class BanerService {\r\n    // Get all baners\r\n    static get = async () => {\r\n        const res = await axios.get(\"/baners\");\r\n\r\n        return res;\r\n    };\r\n\r\n    // Add baner\r\n    static add = async (data) => {\r\n        const res = await axios.post(\"/baners\", data);\r\n\r\n        return res;\r\n    };\r\n\r\n    // Edit baner\r\n    static edit = async (data, id) => {\r\n        const res = await axios.put(`/baners/${id}`, data);\r\n\r\n        return res;\r\n    };\r\n\r\n    // Remove baner\r\n    static remove = async (id) => {\r\n        const res = await axios.delete(`/baners/${id}`);\r\n\r\n        return res;\r\n    };\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Container, Form, Spinner } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport BanerService from \"../../services/BanerService\";\r\n\r\nexport default function CreateBaner() {\r\n    const [text, setText] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isSubmited, setIsSubmited] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fileRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleFileSelect = () => {\r\n        setSelectedFile(fileRef.current.files[0]);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        const data = new FormData();\r\n\r\n        data.append(\"text\", text);\r\n        data.append(\"image\", selectedFile);\r\n\r\n        BanerService.add(data)\r\n            .then((res) => {\r\n                history.push(\"/\");\r\n                toast.success(\"Your baner was created successfully\");\r\n            })\r\n            .catch((err) => {\r\n                setIsSubmited(true);\r\n                setIsLoading(false);\r\n                setErrors(err.response.data.errors);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"py-4 mt-5\">\r\n            <Container className=\"col-8 col-md-6 col-lg-4 shadow-lg p-4\">\r\n                <h1 className=\"text-center text-primary mb-5\">Create New Baner</h1>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                        <Form.Control isValid={isSubmited && !errors?.text} isInvalid={errors?.text} onChange={handleTextChange} value={text} type=\"text\" placeholder=\"Text\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors?.text?.message}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                        <Form.Control isValid={isSubmited && !errors?.image} isInvalid={errors?.image} onChange={handleFileSelect} ref={fileRef} type=\"file\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors?.image?.message}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    {selectedFile && <img className=\"img-fluid d-block mb-3\" src={URL.createObjectURL(selectedFile)} alt=\"Image Selected\" style={{ objectFit: \"contain\", width: \"100%\" }} />}\r\n                    <Button disabled={isLoading} className=\"bg-primary\" type=\"submit\" style={{ width: \"130px\" }}>\r\n                        {isLoading ? (\r\n                            <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </Spinner>\r\n                        ) : (\r\n                            \"Create Banner\"\r\n                        )}\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n"],"sourceRoot":""}