{"version":3,"sources":["pages/register/Register.js"],"names":["Register","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isSubmited","setIsSubmited","errors","setErrors","useContext","AuthContext","isFetching","dispatch","history","useHistory","className","style","height","transform","onSubmit","e","preventDefault","RegisterStart","user","AuthService","register","then","res","RegisterSuccess","push","toast","success","catch","err","RegisterFailed","response","data","Group","controlId","Control","isValid","isInvalid","onChange","target","value","type","placeholder","Feedback","message","disabled","width","size","animation","role"],"mappings":"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","file":"static/js/9.a41d3280.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Container, Form, Spinner } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { RegisterFailed, RegisterStart, RegisterSuccess } from \"../../context/auth/AuthActions\";\r\nimport { AuthContext } from \"../../context/auth/AuthContext\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nexport default function Register() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [isSubmited, setIsSubmited] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const { isFetching, dispatch } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleConfirmPasswordChange = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(RegisterStart());\r\n\r\n        const user = { email, password, confirmPassword };\r\n\r\n        AuthService.register(user)\r\n            .then((res) => {\r\n                dispatch(RegisterSuccess());\r\n                history.push(\"/login\");\r\n                toast.success(\"You have been registered successfully\");\r\n            })\r\n            .catch((err) => {\r\n                dispatch(RegisterFailed());\r\n                setErrors(err.response.data.errors);\r\n\r\n                if (!isSubmited) {\r\n                    setIsSubmited(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"position-relative\" style={{ height: \"calc(100vh - 61.6px)\" }}>\r\n            <Container className=\"col-8 col-md-6 col-lg-4 shadow-lg p-4 position-absolute start-50 top-50\" style={{ transform: \"translate(-50%, -50%)\" }}>\r\n                <h3 className=\"text-center text-primary mb-4\">Register</h3>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-4\" controlId=\"formBasicEmail\">\r\n                        <Form.Control isValid={isSubmited && !errors?.email} isInvalid={errors?.email} onChange={handleEmailChange} value={email} type=\"email\" placeholder=\"Email\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors?.email?.message}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-4\" controlId=\"formBasicPassword\">\r\n                        <Form.Control isValid={isSubmited && !errors?.password} isInvalid={errors?.password} onChange={handlePasswordChange} value={password} type=\"password\" placeholder=\"Password\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors?.password?.message}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-4\" controlId=\"formBasicConfirmPassword\">\r\n                        <Form.Control isValid={isSubmited && !errors?.password && !errors?.confirmPassword} isInvalid={errors?.confirmPassword} onChange={handleConfirmPasswordChange} value={confirmPassword} type=\"password\" placeholder=\"Repeat Password\" />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors?.confirmPassword?.message}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Button disabled={isFetching} className=\"bg-primary\" type=\"submit\" style={{ width: \"80px\" }}>\r\n                        {isFetching ? (\r\n                            <Spinner size=\"sm\" animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </Spinner>\r\n                        ) : (\r\n                            \"Register\"\r\n                        )}\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n"],"sourceRoot":""}